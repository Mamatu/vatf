{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/product.schema.json",
  "title": "Test framework config for voice assistant",
  "description": "Test framework",
  "type": "object",
  "properties": {
    "assets" : {
      "type" : "object",
      "properties" : {
        "audio" : {
          "type" : "object",
          "description" : "object which contains information about audio files used in project",
          "properties": {
            "path" : {
              "description" : "path to audio files directory",
              "type" : "string"
            },
            "files" : {
              "type" : "array",
              "description" : "array of files objects",
              "items" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "name of audio file"
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "required" : ["name"]
              }
            }
          },
          "required" : ["path"]
        }
      }
    },
    "log_snapshot" : {
      "type" : "object",
      "description" : "log_snapshot config parameters",
      "properties" : {
        "path" : {
          "type" : "string",
          "description" : "path to log FILE. Values which can be used here are: {session_path}"
        },
        "command" : {
          "type" : "string",
           "description" : "shell command to collect log. Values which can be used here are: {session_path}"
        },
        "timedelta" : {
          "type" : "object",
          "description" : "offset between timestamp in logs and local time (in which is stored recording creation timestamp). It should be written in format provided in 'strformat' string",
          "properties" : {
            "days" : {
              "type" : "number",
              "default" : 0
            },
            "seconds" : {
              "type" : "number",
              "default" : 0
            },
            "microseconds" : {
              "type" : "number",
              "default" : 0
            },
            "milliseconds" : {
              "type" : "number",
              "default" : 0
            },
            "minutes" : {
              "type" : "number",
              "default" : 0
            },
            "hours" : {
              "type" : "number",
              "default" : 0
            },
            "weeks" : {
              "type" : "number",
              "default" : 0
            }
          }
        },
        "date_format" : {
          "type" : "string",
          "description" : "dare format of timestamp in log for instance: %Y-%m-%d %H:%M:%S.%f"
        },
        "date_regex" : {
          "type" : "string",
          "description" : "date regex of timestamp in log for instance: [0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9].[0-9][0-9][0-9]"
        }
      }
    },
    "audio" : {
        "path" : {
            "type" : "string",
            "description" : "path to audio DIRECTORY"
        }
    },
    "wait_for_regex" : {
        "command" : {
            "type" : "string",
            "description" : "command to collect log for waiting"
        },
        "path" : {
            "type" : "string",
            "description" : "path to file which is monitorig for waiting"
        },
        "timedelta" : {
          "type" : "object",
          "description" : "offset between timestamp in logs and local time (in which is stored recording creation timestamp). It should be written in format provided in 'strformat' string",
          "properties" : {
            "days" : {
              "type" : "number",
              "default" : 0
            },
            "seconds" : {
              "type" : "number",
              "default" : 0
            },
            "microseconds" : {
              "type" : "number",
              "default" : 0
            },
            "milliseconds" : {
              "type" : "number",
              "default" : 0
            },
            "minutes" : {
              "type" : "number",
              "default" : 0
            },
            "hours" : {
              "type" : "number",
              "default" : 0
            },
            "weeks" : {
              "type" : "number",
              "default" : 0
            }
          }
        },
        "date_format" : {
          "type" : "string",
          "description" : "date format of timestamp in log for instance: %Y-%m-%d %H:%M:%S.%f"
        },
        "date_regex" : {
          "type" : "string",
          "description" : "date regex of timestamp in log for instance: \"^[0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} [0-2][0-9]:[0-6][0-9]:[0-6][0-9]\""},
        "is_file_ring_buffer" : {
          "type" : "boolean",
          "description" : "If true file ring buffer is in an use"
        },
        "lines_count" : {
          "type" : "number",
          "description" : "lines count in every chunk"
        },
        "chunks_count" : {
          "type" : "number",
          "description" : "chunks count of file rung buffer"
        },
        "workspace" : {
          "type" : "string",
          "description" : "path to folder where fifo and chunks are created by file ring buffer feature"
        },
        "break_cleanup" : {
          "type" : "number",
          "description" : "break for cleanup thread"
        }
    },
    "utterance_to_va" : {
      "type" : "object",
      "description" : "defines regexes which determine begin and end of utterance to voice assistant from user",
      "properties" : {
        "regexes" : {
          "type" : "array",
          "description" : "array of regexes",
          "items" : {
            "type" : "object",
            "properties" : {
              "begin" : {
                "type" : "string",
                "description" : "regex defines begin of utterance"
              },
              "end" : {
                "type" : "string",
                "description" : "regex defines end of utterance"
              }
            }
          },
          "minItems" : 1,
          "maxItems" : 1
        }
      }
    },
    "utterance_from_va" : {
      "type" : "object",
      "description" : "defines regexes which determine begin and end of utterance from voice assistant to user",
      "properties" : {
        "regexes" : {
          "type" : "array",
          "description" : "array of regexes",
          "items" : {
            "type" : "object",
            "properties" : {
              "begin" : {
                "type" : "string",
                "description" : "regex defines begin of utterance"
              },
              "end" : {
                "type" : "string",
                "description" : "regex defines end of utterance"
              }
            }
          },
          "minItems" : 1,
          "maxItems" : 1
        }
      }
    },
    "format" : {
      "type" : "object",
      "description" : "expression to use format the config. To use expression use {} like in f-string https://peps.python.org/pep-0498. Object's properties are key and values"
    }
  }
}
